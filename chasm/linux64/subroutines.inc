;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
; FIXES
;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
reg.caller fix rcx,rdx,rdi,esi,r8,r9
reg.callee fix rbx,rsp,rbp,r12,r13,r14,r15
sr.arg1 fix rdi
sr.arg2 fix rsi
sr.arg3 fix rdx
sr.arg4 fix rcx
sr.arg5 fix r8
sr.arg6 fix r9
;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
; SUBROUTINE BOILERPLATE
;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
macro subroute.define name* {
name:
    stack rbx,r12,r13,r14,r15
}
macro subroute.exit {
    unstack rbx,r12,r13,r14,r15
    ret
}
macro subroute.execute subroutine*, sr.arg1=0, sr.arg2=0, sr.arg3=0, sr.arg4=0, sr.arg6=0 {
    stack reg.caller   
    mov #1, sr.arg1
    mov #2, sr.arg2
    mov #3, sr.arg3
    mov #4, sr.arg4
    mov #5, sr.arg5
    mov #6, sr.arg6
    call subroutine
}
macro subroute.return variable* {
    mov variable, rax
    unstack reg.caller
}
;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
; SUBROUTINE STRINGING
;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
macro >> {
  :\n: mov sr.arg1, rax :\n:
}





